{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace2021\\\\projectmanagement\\\\client\\\\src\\\\components\\\\projects\\\\ProjectForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from \"lodash\";\n\nclass ProjectForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOptions = options => {\n      var keyMap = {\n        id: 'value',\n        companyName: 'label',\n        userName: 'label',\n        description: 'label'\n      };\n      const modifiedOptions = options.map(function (obj) {\n        return _.mapKeys(obj, function (value, key) {\n          return keyMap[key];\n        });\n      });\n      return modifiedOptions;\n    };\n\n    this.renderTextInput = ({\n      input,\n      label,\n      type = \"text\"\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui labeled input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderDropdown = ({\n      input,\n      options,\n      label\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\",\n          ...input,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLabel = label => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.renderDatePicker = ({\n      input,\n      label,\n      minDate = new Date()\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(DatePicker, {\n          dateFormat: \"dd/MM/yyyy\",\n          ...input,\n          minDate: minDate,\n          selected: input.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    console.log(\" PROPS IN FORM \", this.props);\n\n    if (this.props.client) {\n      console.log(\"AS OBJECS\", this.renderOptions(this.props.initialValues.client));\n      const priorty = [{\n        value: \"LOW\",\n        label: \"LOW\"\n      }, {\n        value: \"MEDIUM\",\n        label: \"MEDIUM\"\n      }, {\n        value: \"HIGH\",\n        label: \"HIGH\"\n      }];\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"qouteNumber\",\n            label: \"Qoute Number\",\n            type: \"number\",\n            component: this.renderTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"projectName\",\n            label: \"Project Name\",\n            component: this.renderTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedClient\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.client),\n            label: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedPriorty\",\n            component: this.renderDropdown,\n            options: userOptions,\n            label: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"startDate\",\n            component: this.renderDatePicker,\n            label: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedType\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.type),\n            label: \"Project Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedEmployee\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.employee),\n            label: \"Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"estEndDate\",\n            component: this.renderDatePicker,\n            label: \"Est End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedGuide\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.employee),\n            label: \"Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default reduxForm({\n  form: \"projectForm\"\n})(ProjectForm);","map":{"version":3,"sources":["D:/workspace2021/projectmanagement/client/src/components/projects/ProjectForm.js"],"names":["React","Field","reduxForm","Select","DatePicker","_","ProjectForm","Component","renderOptions","options","keyMap","id","companyName","userName","description","modifiedOptions","map","obj","mapKeys","value","key","renderTextInput","input","label","type","renderLabel","renderDropdown","renderDatePicker","minDate","Date","render","console","log","props","client","initialValues","priorty","userOptions","employee","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport _ from \"lodash\";\r\n\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n\r\n\r\n  renderOptions=(options)=>{\r\n\r\n    \r\n    var keyMap = {\r\n      id: 'value',\r\n      companyName: 'label',\r\n      userName:'label',\r\n      description:'label'\r\n    };\r\n    \r\n    const modifiedOptions=  options.map(function(obj) {\r\n      return _.mapKeys(obj, function(value, key) {\r\n        return keyMap[key];\r\n      });\r\n    });\r\n\r\n    return modifiedOptions;\r\n  }\r\n\r\n\r\n  renderTextInput = ({ input, label, type = \"text\" }) => {\r\n   \r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <div className=\"ui labeled input\">\r\n          <input {...input} type={type} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderDropdown = ({ input, options, label }) => {\r\n    \r\n    \r\n\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <Select\r\n          className=\"basic-multi-select\"\r\n          classNamePrefix=\"select\"\r\n          {...input}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderLabel = (label) => {\r\n    return <label>{label}:</label>;\r\n  };\r\n\r\n  renderDatePicker = ({ input, label, minDate = new Date() }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n        <DatePicker dateFormat=\"dd/MM/yyyy\" {...input} minDate={minDate}\r\n        selected={input.value} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(\" PROPS IN FORM \",this.props);\r\n   \r\n    if(this.props.client){\r\n      console.log(\"AS OBJECS\",this.renderOptions(this.props.initialValues.client));\r\n\r\n      \r\n    const priorty= [\r\n      { value: \"LOW\", label: \"LOW\" },\r\n      { value: \"MEDIUM\", label: \"MEDIUM\" },\r\n      { value: \"HIGH\", label: \"HIGH\" },\r\n    ];\r\n\r\n      return (\r\n\r\n      \r\n        <form className=\"ui form\">\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"qouteNumber\"\r\n              label=\"Qoute Number\"\r\n              type=\"number\"\r\n              component={this.renderTextInput}\r\n            />\r\n            <Field\r\n              name=\"projectName\"\r\n              label=\"Project Name\"\r\n              component={this.renderTextInput}\r\n            />\r\n  \r\n            <Field\r\n              name=\"selectedClient\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.client)}\r\n              label=\"Client\"\r\n            />\r\n          </div>\r\n  \r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"selectedPriorty\"\r\n              component={this.renderDropdown}\r\n              options={userOptions}\r\n              label=\"Priority\"\r\n            />\r\n            <Field\r\n              name=\"startDate\"\r\n              component={this.renderDatePicker}\r\n              label=\"Start Date\"\r\n            />\r\n  \r\n            <Field\r\n              name=\"selectedType\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.type)}\r\n              label=\"Project Type\"\r\n            />\r\n          </div>\r\n  \r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"selectedEmployee\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.employee)}\r\n              label=\"Allocation\"\r\n            />\r\n            <Field\r\n              name=\"estEndDate\"\r\n              component={this.renderDatePicker}\r\n              label=\"Est End Date\"\r\n            />\r\n  \r\n            <Field\r\n              name=\"selectedGuide\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.employee)}\r\n              label=\"Guide\"\r\n            />\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n\r\n    return <div>Loading</div>;\r\n    \r\n  \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default reduxForm({\r\n  form: \"projectForm\",\r\n})(ProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}