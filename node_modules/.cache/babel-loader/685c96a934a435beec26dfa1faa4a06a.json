{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace2021\\\\projectmanagement\\\\client\\\\src\\\\components\\\\projects\\\\ProjectForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getMetatData } from \"../../actions\";\n\nclass ProjectForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTextInput = ({\n      input,\n      label,\n      type = \"text\"\n    }) => {\n      console.log(input);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui labeled input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderDropdown = ({\n      input,\n      options,\n      label\n    }) => {\n      console.log(options);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\",\n          ...input,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLabel = label => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.renderDatePicker = ({\n      input,\n      label,\n      minDate = new Date()\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(DatePicker, {\n          dateFormat: \"dd/MM/yyyy\",\n          ...input,\n          minDate: minDate,\n          selected: input.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getMetatData();\n  }\n\n  render() {\n    const userOptions = [{\n      label: \"Erika\",\n      value: \"4e4cf51f-b406-413a-ae46-2cf06c7aabff\"\n    }, {\n      label: \"Julia\",\n      value: \"edad97c7-f2dc-4198-91a9-8f20c7bc67b2\"\n    }, {\n      label: \"Sarah\",\n      value: \"57d3578a-3583-4290-8bae-596a4da81a8d\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three fields\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"qouteNumber\",\n          label: \"Qoute Number\",\n          type: \"number\",\n          component: this.renderTextInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"projectName\",\n          label: \"Project Name\",\n          component: this.renderTextInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"selectedClient\",\n          component: this.renderDropdown,\n          options: userOptions,\n          label: \"Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three fields\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"selectedPriorty\",\n          component: this.renderDropdown,\n          options: userOptions,\n          label: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"startDate\",\n          component: this.renderDatePicker,\n          label: \"Start Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"selectedType\",\n          component: this.renderDropdown,\n          options: userOptions,\n          label: \"Project Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"three fields\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"selectedEmployee\",\n          component: this.renderDropdown,\n          options: userOptions,\n          label: \"Allocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"estEndDate\",\n          component: this.renderDatePicker,\n          label: \"Est End Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"selectedGuide\",\n          component: this.renderDropdown,\n          options: userOptions,\n          label: \"Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapPropToState = state => {\n  console.log(\"HERE I AM\", state);\n  return {\n    client: null\n  };\n};\n\nexport default reduxForm({\n  form: \"projectForm\"\n})(ProjectForm);","map":{"version":3,"sources":["D:/workspace2021/projectmanagement/client/src/components/projects/ProjectForm.js"],"names":["React","Field","reduxForm","Select","DatePicker","getMetatData","ProjectForm","Component","renderTextInput","input","label","type","console","log","renderLabel","renderDropdown","options","renderDatePicker","minDate","Date","value","componentDidMount","props","render","userOptions","mapPropToState","state","client","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AAGA,SAASC,YAAT,QAA6B,eAA7B;;AAGA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAOxCC,eAPwC,GAOtB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,IAAI,GAAG;AAAvB,KAAD,KAAqC;AACrDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACG,KAAKK,WAAL,CAAiBJ,KAAjB,CADH,eAGE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE,sBAAWD,KAAX;AAAkB,YAAA,IAAI,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAlBuC;;AAAA,SAoBxCI,cApBwC,GAoBvB,CAAC;AAAEN,MAAAA,KAAF;AAASO,MAAAA,OAAT;AAAkBN,MAAAA;AAAlB,KAAD,KAA+B;AAC9CE,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACG,KAAKF,WAAL,CAAiBJ,KAAjB,CADH,eAGE,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,oBADZ;AAEE,UAAA,eAAe,EAAC,QAFlB;AAAA,aAGMD,KAHN;AAIE,UAAA,OAAO,EAAEO;AAJX;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAlCuC;;AAAA,SAoCxCF,WApCwC,GAoCzBJ,KAAD,IAAW;AACvB,0BAAO;AAAA,mBAAQA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAtCuC;;AAAA,SAwCxCO,gBAxCwC,GAwCrB,CAAC;AAAER,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBQ,MAAAA,OAAO,GAAG,IAAIC,IAAJ;AAA1B,KAAD,KAA4C;AAC7D,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACG,KAAKL,WAAL,CAAiBJ,KAAjB,CADH,eAEE,QAAC,UAAD;AAAY,UAAA,UAAU,EAAC,YAAvB;AAAA,aAAwCD,KAAxC;AAA+C,UAAA,OAAO,EAAES,OAAxD;AACA,UAAA,QAAQ,EAAET,KAAK,CAACW;AADhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KAhDuC;AAAA;;AAGxCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWjB,YAAX;AACH;;AA6CCkB,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,CAClB;AACEd,MAAAA,KAAK,EAAE,OADT;AAEEU,MAAAA,KAAK,EAAE;AAFT,KADkB,EAKlB;AACEV,MAAAA,KAAK,EAAE,OADT;AAEEU,MAAAA,KAAK,EAAE;AAFT,KALkB,EASlB;AACEV,MAAAA,KAAK,EAAE,OADT;AAEEU,MAAAA,KAAK,EAAE;AAFT,KATkB,CAApB;AAeA,wBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,SAAS,EAAE,KAAKZ;AAJlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,SAAS,EAAE,KAAKA;AAHlB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,gBADP;AAEE,UAAA,SAAS,EAAE,KAAKO,cAFlB;AAGE,UAAA,OAAO,EAAES,WAHX;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,SAAS,EAAE,KAAKT,cAFlB;AAGE,UAAA,OAAO,EAAES,WAHX;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,SAAS,EAAE,KAAKP,gBAFlB;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,SAAS,EAAE,KAAKF,cAFlB;AAGE,UAAA,OAAO,EAAES,WAHX;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA2CE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,kBADP;AAEE,UAAA,SAAS,EAAE,KAAKT,cAFlB;AAGE,UAAA,OAAO,EAAES,WAHX;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,SAAS,EAAE,KAAKP,gBAFlB;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,eADP;AAEE,UAAA,SAAS,EAAE,KAAKF,cAFlB;AAGE,UAAA,OAAO,EAAES,WAHX;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkED;;AApIuC;;AAuI1C,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCd,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBa,KAAxB;AACA,SAAO;AAAEC,IAAAA,MAAM,EAAC;AAAT,GAAP;AACD,CAHD;;AAKA,eAAezB,SAAS,CAAC;AACvB0B,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZtB,WAFY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nimport { getMetatData } from \"../../actions\";\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n\r\n\r\n  componentDidMount(){\r\n    this.props.getMetatData();\r\n}\r\n\r\n  renderTextInput = ({ input, label, type = \"text\" }) => {\r\n    console.log(input);\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <div className=\"ui labeled input\">\r\n          <input {...input} type={type} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderDropdown = ({ input, options, label }) => {\r\n    console.log(options);\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <Select\r\n          className=\"basic-multi-select\"\r\n          classNamePrefix=\"select\"\r\n          {...input}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderLabel = (label) => {\r\n    return <label>{label}:</label>;\r\n  };\r\n\r\n  renderDatePicker = ({ input, label, minDate = new Date() }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n        <DatePicker dateFormat=\"dd/MM/yyyy\" {...input} minDate={minDate}\r\n        selected={input.value} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const userOptions = [\r\n      {\r\n        label: \"Erika\",\r\n        value: \"4e4cf51f-b406-413a-ae46-2cf06c7aabff\",\r\n      },\r\n      {\r\n        label: \"Julia\",\r\n        value: \"edad97c7-f2dc-4198-91a9-8f20c7bc67b2\",\r\n      },\r\n      {\r\n        label: \"Sarah\",\r\n        value: \"57d3578a-3583-4290-8bae-596a4da81a8d\",\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <form className=\"ui form\">\r\n        <div className=\"three fields\">\r\n          <Field\r\n            name=\"qouteNumber\"\r\n            label=\"Qoute Number\"\r\n            type=\"number\"\r\n            component={this.renderTextInput}\r\n          />\r\n          <Field\r\n            name=\"projectName\"\r\n            label=\"Project Name\"\r\n            component={this.renderTextInput}\r\n          />\r\n\r\n          <Field\r\n            name=\"selectedClient\"\r\n            component={this.renderDropdown}\r\n            options={userOptions}\r\n            label=\"Client\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"three fields\">\r\n          <Field\r\n            name=\"selectedPriorty\"\r\n            component={this.renderDropdown}\r\n            options={userOptions}\r\n            label=\"Priority\"\r\n          />\r\n          <Field\r\n            name=\"startDate\"\r\n            component={this.renderDatePicker}\r\n            label=\"Start Date\"\r\n          />\r\n\r\n          <Field\r\n            name=\"selectedType\"\r\n            component={this.renderDropdown}\r\n            options={userOptions}\r\n            label=\"Project Type\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"three fields\">\r\n          <Field\r\n            name=\"selectedEmployee\"\r\n            component={this.renderDropdown}\r\n            options={userOptions}\r\n            label=\"Allocation\"\r\n          />\r\n          <Field\r\n            name=\"estEndDate\"\r\n            component={this.renderDatePicker}\r\n            label=\"Est End Date\"\r\n          />\r\n\r\n          <Field\r\n            name=\"selectedGuide\"\r\n            component={this.renderDropdown}\r\n            options={userOptions}\r\n            label=\"Guide\"\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapPropToState = (state) => {\r\n  console.log(\"HERE I AM\",state);\r\n  return { client:null };\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"projectForm\",\r\n})(ProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}