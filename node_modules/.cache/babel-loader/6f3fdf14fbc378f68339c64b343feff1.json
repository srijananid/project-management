{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace2021\\\\projectmanagement\\\\client\\\\src\\\\components\\\\projects\\\\ProjectForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from \"lodash\";\n\nclass ProjectForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOptions = options => {\n      var keyMap = {\n        id: \"value\",\n        companyName: \"label\",\n        userName: \"label\",\n        description: \"label\"\n      };\n      const modifiedOptions = options.map(function (obj) {\n        return _.mapKeys(obj, function (value, key) {\n          return keyMap[key];\n        });\n      });\n      return modifiedOptions;\n    };\n\n    this.renderTextInput = ({\n      input,\n      label,\n      type = \"text\",\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui labeled input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderFileInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: \"file\",\n            onChange: event => this.handleChange(event, input)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderDropdown = ({\n      input,\n      options,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\",\n          ...input,\n          options: options,\n          value: input.value,\n          onBlur: () => {\n            input.onBlur(input.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderMultiDropdown = ({\n      input,\n      options,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(Select, {\n          isMulti: true,\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\",\n          ...input,\n          options: options,\n          value: input.value,\n          onBlur: () => {\n            input.onBlur(input.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLabel = label => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.renderDatePicker = ({\n      input,\n      label,\n      minDate = new Date(),\n      meta\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(DatePicker, {\n          dateFormat: \"dd/MM/yyyy\",\n          ...input,\n          minDate: minDate,\n          selected: input.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  render() {\n    console.log(\" PROPS IN FORM \", this.props);\n\n    if (this.props.client) {\n      console.log(\"AS OBJECS\", this.renderOptions(this.props.initialValues.client));\n      const priorty = [{\n        value: \"LOW\",\n        label: \"LOW\"\n      }, {\n        value: \"MEDIUM\",\n        label: \"MEDIUM\"\n      }, {\n        value: \"HIGH\",\n        label: \"HIGH\"\n      }];\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"qouteNumber\",\n            label: \"Qoute Number\",\n            type: \"number\",\n            component: this.renderTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"projectName\",\n            label: \"Project Name\",\n            component: this.renderTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedClient\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.client),\n            label: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedPriorty\",\n            component: this.renderDropdown,\n            options: priorty,\n            label: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"startDate\",\n            component: this.renderDatePicker,\n            label: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedType\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.type),\n            label: \"Project Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedEmployee\",\n            component: this.renderMultiDropdown,\n            options: this.renderOptions(this.props.initialValues.employee),\n            label: \"Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"estEndDate\",\n            component: this.renderDatePicker,\n            label: \"Est End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedGuide\",\n            component: this.renderMultiDropdown,\n            options: this.renderOptions(this.props.initialValues.employee),\n            label: \"Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"two fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui button\",\n              type: \"button\",\n              children: \"RESET ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui primary button  right floated\",\n              type: \"submit\",\n              children: \"CREATE PROJECT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.projectName) {\n    error.qouteNumber = \"Please enter a Project Name\";\n  }\n\n  if (!formValues.qouteNumber) {\n    error.qouteNumber = \"Please enter a Qoute Number\";\n  }\n\n  if (!formValues.selectedClient) {\n    error.qouteNumber = \"Please select a Client\";\n  }\n\n  if (!formValues.selectedEmployee) {\n    error.qouteNumber = \"Please select employee allocation\";\n  }\n\n  if (!formValues.selectedPriorty) {\n    error.qouteNumber = \"Please priority\";\n  }\n\n  if (!formValues.selectedType) {\n    error.qouteNumber = \"Please select Project Type\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"projectForm\",\n  validate\n})(ProjectForm);","map":{"version":3,"sources":["D:/workspace2021/projectmanagement/client/src/components/projects/ProjectForm.js"],"names":["React","Field","reduxForm","Select","DatePicker","_","ProjectForm","Component","renderOptions","options","keyMap","id","companyName","userName","description","modifiedOptions","map","obj","mapKeys","value","key","renderTextInput","input","label","type","meta","renderLabel","renderFileInput","event","handleChange","renderDropdown","onBlur","renderMultiDropdown","renderDatePicker","minDate","Date","renderError","onSubmit","formValues","props","render","console","log","client","initialValues","priorty","handleSubmit","employee","validate","errors","projectName","error","qouteNumber","selectedClient","selectedEmployee","selectedPriorty","selectedType","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport _ from \"lodash\";\r\n\r\nclass ProjectForm extends React.Component {\r\n  renderOptions = (options) => {\r\n    var keyMap = {\r\n      id: \"value\",\r\n      companyName: \"label\",\r\n      userName: \"label\",\r\n      description: \"label\",\r\n    };\r\n\r\n    const modifiedOptions = options.map(function (obj) {\r\n      return _.mapKeys(obj, function (value, key) {\r\n        return keyMap[key];\r\n      });\r\n    });\r\n\r\n    return modifiedOptions;\r\n  };\r\n\r\n  renderTextInput = ({ input, label, type = \"text\" , meta}) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <div className=\"ui labeled input\">\r\n          <input {...input} type={type} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderFileInput = ({ input, label , meta}) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n        <div>\r\n          <input\r\n           {...input}\r\n            type=\"file\"\r\n            onChange={(event) => this.handleChange(event, input)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n \r\n\r\n  renderDropdown = ({ input, options, label, meta }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <Select\r\n          className=\"basic-multi-select\"\r\n          classNamePrefix=\"select\"\r\n          {...input}\r\n          options={options}\r\n          value={input.value}\r\n          onBlur={() => {\r\n            input.onBlur(input.value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderMultiDropdown = ({ input, options, label, meta }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <Select\r\n          isMulti\r\n          className=\"basic-multi-select\"\r\n          classNamePrefix=\"select\"\r\n          {...input}\r\n          options={options}\r\n          value={input.value}\r\n          onBlur={() => {\r\n            input.onBlur(input.value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderLabel = (label) => {\r\n    return <label>{label}:</label>;\r\n  };\r\n\r\n  renderDatePicker = ({ input, label, minDate = new Date(), meta }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n        <DatePicker\r\n          dateFormat=\"dd/MM/yyyy\"\r\n          {...input}\r\n          minDate={minDate}\r\n          selected={input.value}\r\n        />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  \r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    console.log(\" PROPS IN FORM \", this.props);\r\n\r\n    if (this.props.client) {\r\n      console.log(\r\n        \"AS OBJECS\",\r\n        this.renderOptions(this.props.initialValues.client)\r\n      );\r\n\r\n      const priorty = [\r\n        { value: \"LOW\", label: \"LOW\" },\r\n        { value: \"MEDIUM\", label: \"MEDIUM\" },\r\n        { value: \"HIGH\", label: \"HIGH\" },\r\n      ];\r\n\r\n      return (\r\n        <form\r\n          className=\"ui form\"\r\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        >\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"qouteNumber\"\r\n              label=\"Qoute Number\"\r\n              type=\"number\"\r\n              component={this.renderTextInput}\r\n            />\r\n            <Field\r\n              name=\"projectName\"\r\n              label=\"Project Name\"\r\n              component={this.renderTextInput}\r\n            />\r\n\r\n            <Field\r\n              name=\"selectedClient\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.client)}\r\n              label=\"Client\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"selectedPriorty\"\r\n              component={this.renderDropdown}\r\n              options={priorty}\r\n              label=\"Priority\"\r\n            />\r\n            <Field\r\n              name=\"startDate\"\r\n              component={this.renderDatePicker}\r\n              label=\"Start Date\"\r\n            />\r\n\r\n            <Field\r\n              name=\"selectedType\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.type)}\r\n              label=\"Project Type\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"selectedEmployee\"\r\n              component={this.renderMultiDropdown}\r\n              options={this.renderOptions(this.props.initialValues.employee)}\r\n              label=\"Allocation\"\r\n            />\r\n            <Field\r\n              name=\"estEndDate\"\r\n              component={this.renderDatePicker}\r\n              label=\"Est End Date\"\r\n            />\r\n\r\n            <Field\r\n              name=\"selectedGuide\"\r\n              component={this.renderMultiDropdown}\r\n              options={this.renderOptions(this.props.initialValues.employee)}\r\n              label=\"Guide\"\r\n            />\r\n          </div>\r\n          <div className=\"two fields\">\r\n            \r\n            <div className=\"field\">\r\n              <button className=\"ui button\" type=\"button\">\r\n                RESET ALL\r\n              </button>\r\n            </div>\r\n            <div className=\"field\">\r\n              <button className=\"ui primary button  right floated\" type=\"submit\">\r\n                CREATE PROJECT\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n\r\n    return <div>Loading</div>;\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  \r\n  const errors = {};\r\n  \r\n\r\n  if(!formValues.projectName){\r\n    error.qouteNumber=\"Please enter a Project Name\";\r\n  }\r\n\r\n\r\n  if(!formValues.qouteNumber){\r\n    error.qouteNumber=\"Please enter a Qoute Number\";\r\n  }\r\n\r\n\r\n  if(!formValues.selectedClient){\r\n    error.qouteNumber=\"Please select a Client\";\r\n  }\r\n\r\n\r\n  if(!formValues.selectedEmployee){\r\n    error.qouteNumber=\"Please select employee allocation\";\r\n  }\r\n\r\n\r\n  if(!formValues.selectedPriorty){\r\n    error.qouteNumber=\"Please priority\";\r\n  }\r\n\r\n\r\n  if(!formValues.selectedType){\r\n    error.qouteNumber=\"Please select Project Type\";\r\n  }\r\n  \r\n\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"projectForm\",\r\n  validate,\r\n})(ProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}