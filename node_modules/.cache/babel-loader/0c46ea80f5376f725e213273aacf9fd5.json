{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace2021\\\\projectmanagement\\\\client\\\\src\\\\components\\\\projects\\\\ProjectForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport _ from \"lodash\";\n\nclass ProjectForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOptions = options => {\n      var keyMap = {\n        id: \"value\",\n        companyName: \"label\",\n        userName: \"label\",\n        description: \"label\"\n      };\n      const modifiedOptions = options.map(function (obj) {\n        return _.mapKeys(obj, function (value, key) {\n          return keyMap[key];\n        });\n      });\n      return modifiedOptions;\n    };\n\n    this.renderTextInput = ({\n      input,\n      label,\n      type = \"text\"\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui labeled input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n            type: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderDropdown = ({\n      input,\n      options,\n      label\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"basic-multi-select\",\n          classNamePrefix: \"select\",\n          ...input,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLabel = label => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.renderDatePicker = ({\n      input,\n      label,\n      minDate = new Date()\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [this.renderLabel(label), /*#__PURE__*/_jsxDEV(DatePicker, {\n          dateFormat: \"dd/MM/yyyy\",\n          ...input,\n          minDate: minDate,\n          selected: input.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    console.log(\" PROPS IN FORM \", this.props);\n\n    if (this.props.client) {\n      console.log(\"AS OBJECS\", this.renderOptions(this.props.initialValues.client));\n      const priorty = [{\n        value: \"LOW\",\n        label: \"LOW\"\n      }, {\n        value: \"MEDIUM\",\n        label: \"MEDIUM\"\n      }, {\n        value: \"HIGH\",\n        label: \"HIGH\"\n      }];\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"qouteNumber\",\n            label: \"Qoute Number\",\n            type: \"number\",\n            component: this.renderTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"projectName\",\n            label: \"Project Name\",\n            component: this.renderTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedClient\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.client),\n            label: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedPriorty\",\n            component: this.renderDropdown,\n            options: priorty,\n            label: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"startDate\",\n            component: this.renderDatePicker,\n            label: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedType\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.type),\n            label: \"Project Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedEmployee\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.employee),\n            label: \"Allocation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"estEndDate\",\n            component: this.renderDatePicker,\n            label: \"Est End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"selectedGuide\",\n            component: this.renderDropdown,\n            options: this.renderOptions(this.props.initialValues.employee),\n            label: \"Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"three fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twelve wide field\",\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              type: \"file\",\n              multiple: true,\n              component: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"four wide field\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui button  floated\",\n              type: \"button\",\n              children: \"RESET ALL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui primary button  floated\",\n              type: \"button\",\n              children: \"CREATE PROJECT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n  console.log(formValues);\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"projectForm\",\n  validate\n})(ProjectForm);","map":{"version":3,"sources":["D:/workspace2021/projectmanagement/client/src/components/projects/ProjectForm.js"],"names":["React","Field","reduxForm","Select","DatePicker","_","ProjectForm","Component","renderOptions","options","keyMap","id","companyName","userName","description","modifiedOptions","map","obj","mapKeys","value","key","renderTextInput","input","label","type","renderLabel","renderDropdown","renderDatePicker","minDate","Date","render","console","log","props","client","initialValues","priorty","employee","validate","formValues","errors","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Select from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport _ from \"lodash\";\r\n\r\nclass ProjectForm extends React.Component {\r\n  renderOptions = (options) => {\r\n    var keyMap = {\r\n      id: \"value\",\r\n      companyName: \"label\",\r\n      userName: \"label\",\r\n      description: \"label\",\r\n    };\r\n\r\n    const modifiedOptions = options.map(function (obj) {\r\n      return _.mapKeys(obj, function (value, key) {\r\n        return keyMap[key];\r\n      });\r\n    });\r\n\r\n    return modifiedOptions;\r\n  };\r\n\r\n  renderTextInput = ({ input, label, type = \"text\" }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <div className=\"ui labeled input\">\r\n          <input {...input} type={type} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderDropdown = ({ input, options, label }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n\r\n        <Select\r\n          className=\"basic-multi-select\"\r\n          classNamePrefix=\"select\"\r\n          {...input}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderLabel = (label) => {\r\n    return <label>{label}:</label>;\r\n  };\r\n\r\n  renderDatePicker = ({ input, label, minDate = new Date() }) => {\r\n    return (\r\n      <div className=\"field\">\r\n        {this.renderLabel(label)}\r\n        <DatePicker\r\n          dateFormat=\"dd/MM/yyyy\"\r\n          {...input}\r\n          minDate={minDate}\r\n          selected={input.value}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(\" PROPS IN FORM \", this.props);\r\n\r\n    if (this.props.client) {\r\n      console.log(\r\n        \"AS OBJECS\",\r\n        this.renderOptions(this.props.initialValues.client)\r\n      );\r\n\r\n      const priorty = [\r\n        { value: \"LOW\", label: \"LOW\" },\r\n        { value: \"MEDIUM\", label: \"MEDIUM\" },\r\n        { value: \"HIGH\", label: \"HIGH\" },\r\n      ];\r\n\r\n      return (\r\n        <form className=\"ui form\">\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"qouteNumber\"\r\n              label=\"Qoute Number\"\r\n              type=\"number\"\r\n              component={this.renderTextInput}\r\n            />\r\n            <Field\r\n              name=\"projectName\"\r\n              label=\"Project Name\"\r\n              component={this.renderTextInput}\r\n            />\r\n\r\n            <Field\r\n              name=\"selectedClient\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.client)}\r\n              label=\"Client\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"selectedPriorty\"\r\n              component={this.renderDropdown}\r\n              options={priorty}\r\n              label=\"Priority\"\r\n            />\r\n            <Field\r\n              name=\"startDate\"\r\n              component={this.renderDatePicker}\r\n              label=\"Start Date\"\r\n            />\r\n\r\n            <Field\r\n              name=\"selectedType\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.type)}\r\n              label=\"Project Type\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"three fields\">\r\n            <Field\r\n              name=\"selectedEmployee\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.employee)}\r\n              label=\"Allocation\"\r\n            />\r\n            <Field\r\n              name=\"estEndDate\"\r\n              component={this.renderDatePicker}\r\n              label=\"Est End Date\"\r\n            />\r\n\r\n            <Field\r\n              name=\"selectedGuide\"\r\n              component={this.renderDropdown}\r\n              options={this.renderOptions(this.props.initialValues.employee)}\r\n              label=\"Guide\"\r\n            />\r\n          </div>\r\n          <div className=\"three fields\">\r\n            <div className=\"twelve wide field\">\r\n\r\n              <Field type=\"file\" multiple component=\"input\" />\r\n            </div>\r\n            <div className=\"four wide field\">\r\n              <button className=\"ui button  floated\" type=\"button\">\r\n                RESET ALL\r\n              </button>\r\n            \r\n              <button className=\"ui primary button  floated\" type=\"button\">\r\n                CREATE PROJECT\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n\r\n    return <div>Loading</div>;\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  console.log(formValues);\r\n\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"projectForm\",\r\n  validate,\r\n})(ProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}