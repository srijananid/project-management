{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace2021\\\\projectmanagement\\\\client\\\\src\\\\components\\\\GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        const email = this.auth.currentUser.get().getBasicProfile().getEmail();\n        const name = this.auth.currentUser.get().getBasicProfile().getName();\n        this.props.signIn(name, email);\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: \"797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com\",\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), \"Sign Out\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \"Sign In with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    email: state.auth.email,\n    name: state.auth.name\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["D:/workspace2021/projectmanagement/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","email","auth","currentUser","get","getBasicProfile","getEmail","name","getName","props","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAkBvCC,YAlBuC,GAkBxBC,UAAU,IAAI;AAE3B,UAAIA,UAAJ,EAAgB;AACd,cAAMC,KAAK,GAAG,KAAKC,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,eAA5B,GAA8CC,QAA9C,EAAd;AACA,cAAMC,IAAI,GAAG,KAAKL,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,eAA5B,GAA8CG,OAA9C,EAAb;AACA,aAAKC,KAAL,CAAWd,MAAX,CAAkBY,IAAlB,EAAuBN,KAAvB;AACD,OAJD,MAIO;AACL,aAAKQ,KAAL,CAAWb,OAAX;AACD;AACF,KA3BsC;;AAAA,SA6BvCc,aA7BuC,GA6BvB,MAAM;AACpB,WAAKR,IAAL,CAAUP,MAAV;AACD,KA/BsC;;AAAA,SAiCvCgB,cAjCuC,GAiCtB,MAAM;AACrB,WAAKT,IAAL,CAAUN,OAAV;AACD,KAnCsC;AAAA;;AACvCgB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACR,0EAFI;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKlB,IAAL,GAAYW,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AAEA,aAAKvB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBuB,MAArB,CAA4B,KAAKxB,YAAjC;AACD,OAXH;AAYD,KAbD;AAcD;;AAqBDyB,EAAAA,gBAAgB,GAAG;AAEjB,QAAI,KAAKf,KAAL,CAAWT,UAAX,KAA0B,IAA9B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKS,KAAL,CAAWT,UAAf,EAA2B;AAChC,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuB,KAAKS,KAAL,CAAWF;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,KAAKI,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA,kCACA;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZM,MAYA;AACL,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKD,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAjEsC;;AAoEzC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAE/B,SAAO;AAAE3B,IAAAA,UAAU,EAAE2B,KAAK,CAACzB,IAAN,CAAWF,UAAzB;AACGC,IAAAA,KAAK,EAAG0B,KAAK,CAACzB,IAAN,CAAWD,KADtB;AAECM,IAAAA,IAAI,EAACoB,KAAK,CAACzB,IAAN,CAAWK;AAFjB,GAAP;AAGD,CALD;;AAOA,eAAeb,OAAO,CACpBgC,eADoB,EAEpB;AAAE/B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load('client:auth2', () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n          \"797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com\",\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    \r\n    if (isSignedIn) {\r\n      const email =(this.auth.currentUser.get().getBasicProfile().getEmail());\r\n      const name =(this.auth.currentUser.get().getBasicProfile().getName());\r\n      this.props.signIn(name,email);\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton() {\r\n    \r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"item\">{this.props.name}</div>\r\n          <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n          </button>\r\n\r\n        </React.Fragment>\r\n        \r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign In with Google\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n \r\n  return { isSignedIn: state.auth.isSignedIn ,\r\n            email : state.auth.email,\r\n          name:state.auth.name};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n\r\n"]},"metadata":{},"sourceType":"module"}